# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
 - stage: build
   displayName: Build
   jobs:
    - job: build
      displayName: build
      variables:
        solution: '**/*.sln'
        buildPlatform: 'Any CPU'
        buildConfiguration: 'Release'
      steps:
        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: restore
            projects: '**/*.csproj'
        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            projects: '**/*.csproj'
            arguments: '--configuration $(BuildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: test
            projects: '**/*[Tt]ests/*.csproj'
            arguments: '--configuration $(BuildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: publish
            publishWebProjects: True
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True
        - task: PublishBuildArtifacts@1
          displayName: Publish build artifacts
          inputs:
            ArtifactName: App Package
            PathtoPublish: $(Build.ArtifactStagingDirectory)

 - stage: Validate
   displayName: Validate
   dependsOn: build
   condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
   jobs:
   - deployment: deploy
     displayName: Release
     pool:
       vmImage: 'ubuntu-latest'
     environment: Release
     strategy:
       runOnce:
         deploy:
           steps:
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'training_service_connection'
                appType: 'webApp'
                WebAppName: 'cristiantirel'
                packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
            - task: PowerShell@2
              inputs: 
                targetType: 'inline'
                script: |
                  # Write your PowerShell commands here.
                  iwr -uri https://cristiantirel.azurewebsites.net/WeatherForecast


 - stage: Production
   displayName: Production
   dependsOn: build
   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
   jobs:
   - deployment: deploy
     displayName: Release
     pool:
       vmImage: 'ubuntu-latest'
     environment: Release
     strategy:
       runOnce:
         deploy:
           steps:
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'training_service_connection'
                appType: 'webApp'
                WebAppName: 'cristiantirel'
                packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
            - task: PowerShell@2
              inputs: 
                targetType: 'inline'
                script: |
                  # Write your PowerShell commands here.
                  iwr -uri https://cristiantirel.azurewebsites.net/WeatherForecast                  